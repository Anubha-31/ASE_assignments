package com.test;

public class TrignometricFunctions {

	/*
	 * Reference
	 * https://stackoverflow.com/questions/45333694/implement-sine-in-java-without-
	 * math-sin-function
	 */
	
    final double PI = 3.14159265358979323846;
    
    public double Sin(double value) {
        //         Author - marco
        //         source - https://stackoverflow.com/questions/45333694/implement-sine-in-java-without-math-sin-function
        if (value == Double.NEGATIVE_INFINITY || !(value < Double.POSITIVE_INFINITY)) {
            return Double.NaN;
        }
        value %= 2 * PI;
        
        if (value < 0) {
            value = 2 * PI - value;
        }
        
        int sign = 1;
        if(value > PI) {
            value -=PI;
            sign = -1;
        }
        final int PRECISION = 50;
        double temp = 0;
        for (int i = 0; i <= PRECISION; i++) {
            temp += power(-1, i) * (power(value, 2 * i + 1) / factorial(2 * i + 1));
        }
        System.out.println(temp*sign);
        return temp*sign;
    }
    
    public double Cos(double value) {
        if (value == Double.NEGATIVE_INFINITY || !(value < Double.POSITIVE_INFINITY)) {
            return Double.NaN;
        }
        value %= 2 * PI;
        
        if (value < 0) {
            value = 2 * PI - value;
        }
        
        int sign = 1;
        if(value < PI) {
            value -=PI;
            sign = -1;
        }
        final int PRECISION = 50;
        double temp = 0;
        for (int i = 0; i <= PRECISION; i++) {
            temp += power(-1,i) * (power(value, 2 * i ) / factorial( 2 * i ));
        }
        
        return temp*sign;
    }
    public double Tan(double value) {
        
        
        return Sin(value)/Cos(value);
    }
    public double toRadian(double value) {
        
        
        return value/57.2958;
    }
    
    public double toDegree(double value) {
        
        
        return value*57.2958;
    }
    public double power(double a, int counter) {
        
        if (counter == 1){
            return a;
        }
        
        if (counter == 0){
            return 1;
        }
                    
        return a*power(a,counter-1);
    }
    public double factorial(int counter) {
        
        if (counter == 1 || counter == 0){
            return 1;
        }

 

        
        return counter*factorial(counter-1);
    }
    

 

    public double getPI() {
        return PI;
    }
}
